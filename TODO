* Implement a Command class which all Commands are implemeneted. This
  Way ill only have a list of commands.

* Get Mod specific commands working
  -- figure out the best way to set information from the channel
* Get ChannelInfomationSave working. This will be the best part!


* Get Command Per Channel working:
  - Load all saved commands per channel
  - Save all new commands to each channel
    -- Each time a new command is added or changed update the Save file (SAVESDIR/channel)

Loading all commands and saves:

CONSTS
LastFM username
Specs

MODS Lists

CUSTOM BASIC COMMANDS

class LoadedChannelCommands()
{
  std::string GetLastFMUsername() const;
  std::string Specs() const;

  std::vector<CommandBreeds> GetCustomCommands() const;
}

Basic idea:
  When we join a channel, attempt to load the save file with the info under it
  if that file does not exists, create a new blank one.

Saving:
  Make sure to backup the save file! (Since we are overwriting it!):
    Load old save file, save file to .channel_backup
    Save new data to old save file! // If an error happens with in this we can recover

Loading:
  Load SAVESDIR/channel, if that file does not exists check, SAVESDIR/channel_tmp. If that
  does not exists we are done.

LoadedChannelController
  - Holds all the actual loaded information per channel
